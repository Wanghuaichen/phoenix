; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -IF:\here\driver\keil\Project\MDK-ARM(uV4)\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_MD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;187    */
;;;188    static void AppTaskCreate (void)
000000  b51f              PUSH     {r0-r4,lr}
;;;189    {
;;;190       xTaskCreate( vTaskTaskUserIF,   	/* 任务函数  */
000002  2000              MOVS     r0,#0
000004  4a1b              LDR      r2,|L1.116|
000006  2301              MOVS     r3,#1
000008  e9cd2001          STRD     r2,r0,[sp,#4]
00000c  9300              STR      r3,[sp,#0]
00000e  9003              STR      r0,[sp,#0xc]
000010  4603              MOV      r3,r0
000012  f44f7200          MOV      r2,#0x200
000016  a118              ADR      r1,|L1.120|
000018  481a              LDR      r0,|L1.132|
00001a  f7fffffe          BL       xTaskGenericCreate
;;;191                     "vTaskUserIF",     	/* 任务名    */
;;;192                     512,               	/* 任务栈大小，单位word，也就是4字节 */
;;;193                     NULL,              	/* 任务参数  */
;;;194                     1,                 	/* 任务优先级*/
;;;195                     &xHandleTaskUserIF );  /* 任务句柄  */
;;;196    	
;;;197    	
;;;198    	xTaskCreate( vTaskLED,    		/* 任务函数  */
00001e  2000              MOVS     r0,#0
000020  4a19              LDR      r2,|L1.136|
000022  2302              MOVS     r3,#2
000024  e9cd2001          STRD     r2,r0,[sp,#4]
000028  9300              STR      r3,[sp,#0]
00002a  9003              STR      r0,[sp,#0xc]
00002c  4603              MOV      r3,r0
00002e  f44f7200          MOV      r2,#0x200
000032  a116              ADR      r1,|L1.140|
000034  4818              LDR      r0,|L1.152|
000036  f7fffffe          BL       xTaskGenericCreate
;;;199                     "vTaskLED",  		/* 任务名    */
;;;200                     512,         		/* 任务栈大小，单位word，也就是4字节 */
;;;201                     NULL,        		/* 任务参数  */
;;;202                     2,           		/* 任务优先级*/
;;;203                     &xHandleTaskLED ); /* 任务句柄  */
;;;204    	
;;;205    	xTaskCreate( vTaskMsgPro,     		/* 任务函数  */
00003a  2000              MOVS     r0,#0
00003c  4a17              LDR      r2,|L1.156|
00003e  2303              MOVS     r3,#3
000040  e9cd2001          STRD     r2,r0,[sp,#4]
000044  9300              STR      r3,[sp,#0]
000046  9003              STR      r0,[sp,#0xc]
000048  4603              MOV      r3,r0
00004a  f44f7200          MOV      r2,#0x200
00004e  a114              ADR      r1,|L1.160|
000050  4816              LDR      r0,|L1.172|
000052  f7fffffe          BL       xTaskGenericCreate
;;;206                     "vTaskMsgPro",   		/* 任务名    */
;;;207                     512,             		/* 任务栈大小，单位word，也就是4字节 */
;;;208                     NULL,           		/* 任务参数  */
;;;209                     3,               		/* 任务优先级*/
;;;210                     &xHandleTaskMsgPro );  /* 任务句柄  */
;;;211    	
;;;212    	
;;;213    	xTaskCreate( vTaskStart,     		/* 任务函数  */
000056  2000              MOVS     r0,#0
000058  4a15              LDR      r2,|L1.176|
00005a  2304              MOVS     r3,#4
00005c  e9cd2001          STRD     r2,r0,[sp,#4]
000060  9300              STR      r3,[sp,#0]
000062  9003              STR      r0,[sp,#0xc]
000064  4603              MOV      r3,r0
000066  f44f7200          MOV      r2,#0x200
00006a  a112              ADR      r1,|L1.180|
00006c  4814              LDR      r0,|L1.192|
00006e  f7fffffe          BL       xTaskGenericCreate
;;;214                     "vTaskStart",   		/* 任务名    */
;;;215                     512,            		/* 任务栈大小，单位word，也就是4字节 */
;;;216                     NULL,           		/* 任务参数  */
;;;217                     4,              		/* 任务优先级*/
;;;218                     &xHandleTaskStart );   /* 任务句柄  */
;;;219    }
000072  bd1f              POP      {r0-r4,pc}
;;;220    
                          ENDP

                  |L1.116|
                          DCD      xHandleTaskUserIF
                  |L1.120|
000078  76546173          DCB      "vTaskUserIF",0
00007c  6b557365
000080  72494600
                  |L1.132|
                          DCD      vTaskTaskUserIF
                  |L1.136|
                          DCD      xHandleTaskLED
                  |L1.140|
00008c  76546173          DCB      "vTaskLED",0
000090  6b4c4544
000094  00      
000095  00                DCB      0
000096  00                DCB      0
000097  00                DCB      0
                  |L1.152|
                          DCD      vTaskLED
                  |L1.156|
                          DCD      xHandleTaskMsgPro
                  |L1.160|
0000a0  76546173          DCB      "vTaskMsgPro",0
0000a4  6b4d7367
0000a8  50726f00
                  |L1.172|
                          DCD      vTaskMsgPro
                  |L1.176|
                          DCD      xHandleTaskStart
                  |L1.180|
0000b4  76546173          DCB      "vTaskStart",0
0000b8  6b537461
0000bc  727400  
0000bf  00                DCB      0
                  |L1.192|
                          DCD      vTaskStart

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;63     */
;;;64     int main(void)
000000  2001              MOVS     r0,#1
000002  f3808810          MSR      PRIMASK,r0
000006  bf00              NOP      
;;;65     {
;;;66     //	RCC_ClocksTypeDef * RCC_Clocks;
;;;67     //	uint8_t _SYSCLKSource;
;;;68     
;;;69     	/* 
;;;70     	  在启动调度前，为了防止初始化STM32外设时有中断服务程序执行，这里禁止全局中断(除了NMI和HardFault)。
;;;71     	  这样做的好处是： 
;;;72     	  1. 防止执行的中断服务程序中有FreeRTOS的API函数。
;;;73     	  2. 保证系统正常启动，不受别的中断影响。
;;;74     	  3. 关于是否关闭全局中断，大家根据自己的实际情况设置即可。
;;;75     	  在移植文件port.c中的函数prvStartFirstTask中会重新开启全局中断。通过指令cpsie i开启，__set_PRIMASK(1)
;;;76     	  和cpsie i是等效的。
;;;77          */
;;;78     	
;;;79     	__set_PRIMASK(1);  
;;;80     	
;;;81     	/* 硬件初始化 */
;;;82     	bsp_Init(); 
000008  f7fffffe          BL       bsp_Init
;;;83     	
;;;84     		//_SYSCLKSource = RCC_GetSYSCLKSource();
;;;85     	//RCC_GetClocksFreq(RCC_Clocks);
;;;86     	
;;;87     	/* 创建任务 */
;;;88     	AppTaskCreate();
00000c  f7fffffe          BL       AppTaskCreate
;;;89     	
;;;90         /* 启动调度，开始执行任务 */
;;;91         vTaskStartScheduler();
000010  f7fffffe          BL       vTaskStartScheduler
;;;92     
;;;93     	/* 
;;;94     	  如果系统正常启动是不会运行到这里的，运行到这里极有可能是用于定时器任务或者空闲任务的
;;;95     	  heap空间不足造成创建失败，此要加大FreeRTOSConfig.h文件中定义的heap大小：
;;;96     	  #define configTOTAL_HEAP_SIZE	      ( ( size_t ) ( 17 * 1024 ) )
;;;97     	*/
;;;98     	while(1);
000014  bf00              NOP      
                  |L2.22|
000016  e7fe              B        |L2.22|
;;;99     }
;;;100    
                          ENDP


                          AREA ||i.vTaskLED||, CODE, READONLY, ALIGN=1

                  vTaskLED PROC
;;;133    */
;;;134    static void vTaskLED(void *pvParameters)
000000  e002              B        |L3.8|
                  |L3.2|
;;;135    {
;;;136        while(1)
;;;137        {
;;;138    		//printf("Task LED 2\r\n");
;;;139            vTaskDelay(200);
000002  20c8              MOVS     r0,#0xc8
000004  f7fffffe          BL       vTaskDelay
                  |L3.8|
000008  e7fb              B        |L3.2|
;;;140        }
;;;141    }
;;;142    
                          ENDP


                          AREA ||i.vTaskMsgPro||, CODE, READONLY, ALIGN=1

                  vTaskMsgPro PROC
;;;151    */
;;;152    static void vTaskMsgPro(void *pvParameters)
000000  e003              B        |L4.10|
                  |L4.2|
;;;153    {
;;;154        while(1)
;;;155        {
;;;156    		//printf("Task Msg Pro 3\r\n");
;;;157            vTaskDelay(300);
000002  f44f7096          MOV      r0,#0x12c
000006  f7fffffe          BL       vTaskDelay
                  |L4.10|
00000a  e7fa              B        |L4.2|
;;;158        }
;;;159    }
;;;160    
                          ENDP


                          AREA ||i.vTaskStart||, CODE, READONLY, ALIGN=1

                  vTaskStart PROC
;;;169    */
;;;170    static void vTaskStart(void *pvParameters)
000000  e003              B        |L5.10|
                  |L5.2|
;;;171    {
;;;172        while(1)
;;;173        {
;;;174    		/* LED闪烁 */
;;;175    		//printf("Task Start 4\r\n");;
;;;176            vTaskDelay(400);
000002  f44f70c8          MOV      r0,#0x190
000006  f7fffffe          BL       vTaskDelay
                  |L5.10|
00000a  e7fa              B        |L5.2|
;;;177        }
;;;178    }
;;;179    
                          ENDP


                          AREA ||i.vTaskTaskUserIF||, CODE, READONLY, ALIGN=1

                  vTaskTaskUserIF PROC
;;;109    */
;;;110    static void vTaskTaskUserIF(void *pvParameters)
000000  b508              PUSH     {r3,lr}
;;;111    {
;;;112    	uint8_t _ucByte;
;;;113    	
;;;114        while(1)
000002  e009              B        |L6.24|
                  |L6.4|
;;;115        {
;;;116    		//printf("Task Task User IF 1\r\n");
;;;117    			if(comGetChar(COM1,&_ucByte))
000004  4669              MOV      r1,sp
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       comGetChar
00000c  b120              CBZ      r0,|L6.24|
;;;118    			{
;;;119    				comSendChar(COM1,_ucByte);
00000e  f89d1000          LDRB     r1,[sp,#0]
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       comSendChar
                  |L6.24|
000018  e7f4              B        |L6.4|
;;;120    			}
;;;121    		//vTaskDelay(100);
;;;122    	}
;;;123    }
;;;124    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTaskUserIF
                          DCD      0x00000000
                  xHandleTaskLED
                          DCD      0x00000000
                  xHandleTaskMsgPro
                          DCD      0x00000000
                  xHandleTaskStart
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 128
|__asm___6_main_c_main____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
